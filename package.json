{
  "name": "vscode-hexdump",
  "displayName": "hexdump for VSCode",
  "description": "Displays files in hex format",
  "version": "1.9.0",
  "publisher": "slevesque",
  "license": "LICENSE",
  "icon": "icon.png",
  "bugs": {
    "url": "https://github.com/stef-levesque/vscode-hexdump/issues"
  },
  "homepage": "https://github.com/stef-levesque/vscode-hexdump/blob/master/README.md",
  "repository": {
    "type": "git",
    "url": "https://github.com/stef-levesque/vscode-hexdump.git"
  },
  "galleryBanner": {
    "color": "#5c2d91",
    "theme": "dark"
  },
  "engines": {
    "vscode": "^1.60.0"
  },
  "keywords": [
    "vscode",
    "hexdump",
    "hexadecimal"
  ],
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "*"
  ],
  "main": "./out/src/extension",
  "contributes": {
    "languages": [
      {
        "id": "hexdump",
        "extensions": [
          ".bin",
          ".hex",
          ".hexdump"
        ]
      }
    ],
    "grammars": [
      {
        "language": "hexdump",
        "scopeName": "source.hexdump",
        "path": "./syntaxes/hexdump.tmLanguage"
      }
    ],
    "commands": [
      {
        "command": "hexdump.hexdumpFile",
        "title": "Show Hexdump",
        "icon": {
          "light": "./media/hex-icon.svg",
          "dark": "./media/hex-icon-dark.svg"
        }
      },
      {
        "command": "hexdump.hexdumpPath",
        "title": "Show Hexdump from a path"
      },
      {
        "command": "hexdump.hexdumpOpen",
        "title": "Show Hexdump for a file selected in an Open dialog"
      },
      {
        "command": "hexdump.editValue",
        "title": "Edit Value Under Cursor",
        "when": "editorLangId == hexdump"
      },
      {
        "command": "hexdump.gotoAddress",
        "title": "Go to Address...",
        "when": "editorLangId == hexdump"
      },
      {
        "command": "hexdump.exportToFile",
        "title": "Export to Binary File...",
        "when": "editorLangId == hexdump"
      },
      {
        "command": "hexdump.toggleEndian",
        "title": "Toggle Between Little and Big Endian",
        "when": "editorLangId == hexdump"
      },
      {
        "command": "hexdump.toggleUppercase",
        "title": "Toggle Between Upper- and Lowercase",
        "when": "editorLangId == hexdump"
      },
      {
        "command": "hexdump.searchString",
        "title": "Search a string in the file",
        "when": "editorLangId == hexdump"
      },
      {
        "command": "hexdump.searchHex",
        "title": "Search a HEX string in the file",
        "when": "editorLangId == hexdump"
      },
      {
        "command": "hexdump.showAsBytes",
        "title": "as 8-bit, Single Bytes",
        "when": "editorLangId == hexdump"
      },
      {
        "command": "hexdump.showAsWords",
        "title": "as 16-bit Words",
        "when": "editorLangId == hexdump"
      },
      {
        "command": "hexdump.showAsDwords",
        "title": "as 32-bit Words",
        "when": "editorLangId == hexdump"
      },
      {
        "command": "hexdump.showAsQwords",
        "title": "as 64-bit Words",
        "when": "editorLangId == hexdump"
      },
      {
        "command": "hexdump.showAsBin",
        "title": "as Binary Numbers",
        "when": "editorLangId == hexdump"
      },
      {
        "command": "hexdump.showAsOct",
        "title": "as Octal Numbers",
        "when": "editorLangId == hexdump"
      },
      {
        "command": "hexdump.showAsDec",
        "title": "as Decimal Numbers",
        "when": "editorLangId == hexdump"
      },
      {
        "command": "hexdump.showAsHex",
        "title": "as Hexadecimal Numbers",
        "when": "editorLangId == hexdump"
      },
      {
        "command": "hexdump.copyAsFormat",
        "title": "Copy the Selection in a Specific Format",
        "when": "editorLangId == hexdump"
      },
      {
        "command": "hexdump.copyAsText",
        "title": "as Text",
        "when": "editorLangId == hexdump"
      },
      {
        "command": "hexdump.copyAsC",
        "title": "as C Source",
        "when": "editorLangId == hexdump"
      },
      {
        "command": "hexdump.copyAsGolang",
        "title": "as Go Source",
        "when": "editorLangId == hexdump"
      },
      {
        "command": "hexdump.copyAsJava",
        "title": "as Java Source",
        "when": "editorLangId == hexdump"
      },
      {
        "command": "hexdump.copyAsJSON",
        "title": "as JSON",
        "when": "editorLangId == hexdump"
      },
      {
        "command": "hexdump.copyAsBase64",
        "title": "as Base64",
        "when": "editorLangId == hexdump"
      },
      {
        "command": "hexdump.copyAsHexString",
        "title": "as a Hexadecimal String",
        "when": "editorLangId == hexdump"
      },
      {
        "command": "hexdump.copyAsLiteral",
        "title": "as a String Literal",
        "when": "editorLangId == hexdump"
      },
      {
        "command": "hexdump.copyAsIntelHex",
        "title": "as Intel Hex",
        "when": "editorLangId == hexdump"
      }
    ],
    "submenus": [
      {
        "id": "hexdump.copyAs",
        "label": "Copy As"
      },
      {
        "id": "hexdump.displayAs",
        "label": "Display As"
      }
    ],
    "menus": {
      "hexdump.copyAs": [
        {
          "command": "hexdump.copyAsText",
          "group": "hexdump.copy@0"
        },
        {
          "command": "hexdump.copyAsC",
          "group": "hexdump.copy@1"
        },
        {
          "command": "hexdump.copyAsGolang",
          "group": "hexdump.copy@2"
        },
        {
          "command": "hexdump.copyAsJava",
          "group": "hexdump.copy@3"
        },
        {
          "command": "hexdump.copyAsJSON",
          "group": "hexdump.copy@4"
        },
        {
          "command": "hexdump.copyAsBase64",
          "group": "hexdump.copy@5"
        },
        {
          "command": "hexdump.copyAsHexString",
          "group": "hexdump.copy@6"
        },
        {
          "command": "hexdump.copyAsLiteral",
          "group": "hexdump.copy@7"
        },
        {
          "command": "hexdump.copyAsIntelHex",
          "group": "hexdump.copy@8"
        }
      ],
      "hexdump.displayAs": [
        {
          "command": "hexdump.showAsBytes",
          "group": "hexdump.size@0"
        },
        {
          "command": "hexdump.showAsWords",
          "group": "hexdump.size@1"
        },
        {
          "command": "hexdump.showAsDwords",
          "group": "hexdump.size@2"
        },
        {
          "command": "hexdump.showAsQwords",
          "group": "hexdump.size@3"
        },
        {
          "command": "hexdump.showAsBin",
          "group": "hexdump.radix@0"
        },
        {
          "command": "hexdump.showAsOct",
          "group": "hexdump.radix@1"
        },
        {
          "command": "hexdump.showAsDec",
          "group": "hexdump.radix@2"
        },
        {
          "command": "hexdump.showAsHex",
          "group": "hexdump.radix@3"
        }
      ],
      "commandPalette": [
        {
          "command": "hexdump.editValue",
          "when": "editorLangId == hexdump"
        },
        {
          "command": "hexdump.gotoAddress",
          "when": "editorLangId == hexdump"
        },
        {
          "command": "hexdump.exportToFile",
          "when": "editorLangId == hexdump"
        },
        {
          "command": "hexdump.toggleEndian",
          "when": "editorLangId == hexdump"
        },
        {
          "command": "hexdump.searchString",
          "when": "editorLangId == hexdump"
        },
        {
          "command": "hexdump.searchHex",
          "when": "editorLangId == hexdump"
        },
        {
          "command": "hexdump.copyAsFormat",
          "when": "editorLangId == hexdump"
        },
        {
          "command": "hexdump.copyAsText",
          "when": "editorLangId == hexdump"
        },
        {
          "command": "hexdump.copyAsC",
          "when": "editorLangId == hexdump"
        },
        {
          "command": "hexdump.copyAsGolang",
          "when": "editorLangId == hexdump"
        },
        {
          "command": "hexdump.copyAsJava",
          "when": "editorLangId == hexdump"
        },
        {
          "command": "hexdump.copyAsJSON",
          "when": "editorLangId == hexdump"
        },
        {
          "command": "hexdump.copyAsBase64",
          "when": "editorLangId == hexdump"
        },
        {
          "command": "hexdump.copyAsHexString",
          "when": "editorLangId == hexdump"
        },
        {
          "command": "hexdump.copyAsLiteral",
          "when": "editorLangId == hexdump"
        },
        {
          "command": "hexdump.copyAsIntelHex",
          "when": "editorLangId == hexdump"
        }
      ],
      "explorer/context": [
        {
          "command": "hexdump.hexdumpFile"
        }
      ],
      "editor/title": [
        {
          "command": "hexdump.hexdumpFile",
          "when": "hexdump:btnEnabled && resourceScheme == file",
          "group": "navigation"
        },
        {
          "command": "hexdump.hexdumpFile",
          "when": "hexdump:btnEnabled && resourceScheme == hexdump",
          "group": "navigation"
        }
      ],
      "editor/title/context": [
        {
          "command": "hexdump.hexdumpFile",
          "when": "hexdump:btnEnabled && resourceScheme == file"
        }
      ],
      "editor/context": [
        {
          "when": "editorLangId == hexdump",
          "command": "hexdump.editValue",
          "group": "edit"
        },
        {
          "when": "editorLangId == hexdump",
          "command": "hexdump.gotoAddress",
          "group": "navigate"
        },
        {
          "when": "editorLangId == hexdump",
          "command": "hexdump.searchString",
          "group": "navigate"
        },
        {
          "when": "editorLangId == hexdump",
          "command": "hexdump.searchHex",
          "group": "navigate"
        },
        {
          "when": "editorLangId == hexdump",
          "command": "hexdump.exportToFile",
          "group": "export"
        },
        {
          "when": "editorLangId == hexdump",
          "command": "hexdump.copyAsFormat",
          "group": "export"
        },
        {
          "when": "editorLangId == hexdump",
          "submenu": "hexdump.displayAs",
          "group": "view"
        },
        {
          "when": "editorLangId == hexdump",
          "command": "hexdump.toggleEndian",
          "group": "view"
        },
        {
          "when": "editorLangId == hexdump",
          "command": "hexdump.toggleUppercase",
          "group": "view"
        }
      ]
    },
    "keybindings": [
      {
        "key": "ctrl+shift+alt+h",
        "mac": "cmd+shift+alt+h",
        "command": "hexdump.hexdumpOpen"
      },
      {
        "key": "shift+enter",
        "command": "hexdump.editValue",
        "when": "editorTextFocus && editorLangId == hexdump"
      },
      {
        "key": "ctrl+g",
        "command": "hexdump.gotoAddress",
        "when": "editorLangId == hexdump"
      },
      {
        "key": "ctrl+shift+s",
        "mac": "cmd+shift+s",
        "command": "hexdump.exportToFile",
        "when": "editorLangId == hexdump"
      },
      {
        "key": "ctrl+s",
        "mac": "cmd+s",
        "command": "hexdump.save",
        "when": "editorLangId == hexdump"
      },
      {
        "key": "shift+alt+ctrl+e",
        "mac": "shift+alt+cmd+e",
        "command": "hexdump.toggleEndian",
        "when": "editorLangId == hexdump"
      },
      {
        "key": "shift+alt+ctrl+u",
        "mac": "shift+alt+cmd+u",
        "command": "hexdump.toggleUppercase",
        "when": "editorLangId == hexdump"
      },
      {
        "key": "ctrl+f",
        "mac": "cmd+f",
        "command": "hexdump.searchString",
        "when": "editorLangId == hexdump"
      },
      {
        "key": "alt+ctrl+f",
        "mac": "alt+cmd+f",
        "command": "hexdump.searchHex",
        "when": "editorLangId == hexdump"
      },
      {
        "key": "alt+ctrl+c",
        "mac": "alt+cmd+c",
        "command": "hexdump.copyAsFormat",
        "when": "editorLangId == hexdump"
      }
    ],
    "configuration": {
      "type": "object",
      "title": "VS Code Hexdump Configuration",
      "properties": {
        "hexdump.littleEndian": {
          "type": "boolean",
          "default": true,
          "description": "Set default endianness (true for little endian, false for big endian)"
        },
        "hexdump.nibbles": {
          "type": "number",
          "enum": [
            2,
            4,
            8,
            16
          ],
          "default": 2,
          "description": "Number of nibbles per group"
        },
        "hexdump.radix": {
          "type": "number",
          "enum": [
            2,
            8,
            10,
            16
          ],
          "default": 0,
          "description": "radix to use for displaying the binary data"
        },
        "hexdump.uppercase": {
          "type": "boolean",
          "default": true,
          "description": "Display hex digits in uppercase"
        },
        "hexdump.width": {
          "type": "number",
          "enum": [
            8,
            16,
            32
          ],
          "default": 16,
          "description": "Number of bytes per line"
        },
        "hexdump.showOffset": {
          "type": "boolean",
          "default": true,
          "description": "Show offset on first line"
        },
        "hexdump.showAddress": {
          "type": "boolean",
          "default": true,
          "description": "Show address on each line"
        },
        "hexdump.showAscii": {
          "type": "boolean",
          "default": true,
          "description": "Show ASCII section"
        },
        "hexdump.showInspector": {
          "type": "boolean",
          "default": true,
          "description": "Display the Hex Inspector when hovering data"
        },
        "hexdump.sizeWarning": {
          "type": "number",
          "default": 5242880,
          "description": "Display a warning if file is larger than this"
        },
        "hexdump.sizeDisplay": {
          "type": "number",
          "default": 5242880,
          "description": "Maximum size of the buffer to display"
        },
        "hexdump.charEncoding": {
          "type": "string",
          "default": "utf-8",
          "description": "Identify the source character encoding"
        },
        "hexdump.btnEnabled": {
          "type": "boolean",
          "default": true,
          "description": "Display Hexdump button"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "tsc -p ./",
    "compile": "tsc -watch -p ./",
    "postinstall": "node ./node_modules/vscode/bin/install"
  },
  "devDependencies": {
    "@types/node": "^17.0.0",
    "@types/vscode": "^1.63.1",
    "typescript": "^4.5.4"
  },
  "dependencies": {
    "hexy": "^0.3.4",
    "iconv-lite": "^0.6.3",
    "long": "^4.0.0",
    "nrf-intel-hex": "^1.3.0"
  }
}
